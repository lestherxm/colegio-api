#personas = {
	id_persona: int - pk
	correo: string - unique
	nombres: string
	apellidos: string
	nombre_completo: string // Para fines de reporteria es util, de esta forma no se tienen que leer dos campos sino solo uno.
	biografia: text - opcional
	celular: string 
	telefono: string - opcional
	direccion: text
}

empleados = {
	id_empleado: int - fk // es el id de persona
	nit: string - unique
	cui: string - unique // Para fines administrativos del colegio seria importante tener estos datos.
}

alumnos = {
	id_alumno: int - fk // es el id de persona
	carnet: string - unique // Generado mediante algun patron = CEBE2022+${id_alumno}
}

#cursos = {
	id_curso: int - pk
	nombre: string - unique // Matematica, Fisica, Quimica
	descripcion: text
}

#roles = {
	id_rol: int - pk
	nombre: string - unique // Catedratico, Auxiliar, Operador Técnico, Coordinador
	descripcion: text
}

#grados = {
	id_grado: int - pk
	nombre: string - unique //Primero, Segundo, Cuarto, Quinto
}

#grupos = {
	id_grupo: int - pk
	nombre: text - unique// Bachillerato en Computacion, Primaria
}

#jornadas = {
	id_jornada: int - pk
	nombre: string - unique //Matutina, Vespertina
}

#secciones = {
	id_seccion: int - pk
	nombre: string - unique // A, B, C, D
}

#anios = {
	id_anio: int - pk
	anio: string - pk unique //2022,2021, en caso de que quiera registrar datos de años anteriores
}

aulas = {
	id_aula: int - pk //La llave primaria es para modificaciones, las foraneas para filtrar aulas (por grado, grupo, jornada, seccion, anio)
	id_grado: int - fk
	id_grupo: int - fk
	id_jornada: int - fk
	id_seccion: int - fk
	id_anio: int - fk
	nombre: string - unique //util para reportes, se concatena los datos, ej = "Cuarto Bachillerato en Computacion - Jornada ${jornada} - Seccion ${seccion} - ${anio}"
	total_alumnos: int - default 0 // Un contador de alumnos asignados a esa aula, se obtendria de la tabla alumnos_aula
}

responsables_aula = {
	id_aula: int - pk - fk //De esta forma se puede saber que empleados responden a asuntos de un aula //auxiliares para los alumnos en algunas actividades
	id_empleado: int pk - fk // Cada aula tiene un empleado auxiliar al que pueden abocarse para temas administrativos.
	id_rol: int - pk - fk // Para saber que rol cumple el empleado en el aula // generalmente auxiliar, cada aula puede tener mas de un auxiliar por eso se crea esta tabla
}

alumnos_aula = { 
	id_aula: int - pk - fk // Cuando los alumnos se inscriben son asignados a un aula, esta table lleva este registro.
	id_alumno: int - pk - fk - unique //de esta forma se conocera que alumnos pertenecen a que aula, unique hace que el alumno no pueda estar en dos aulas en el sistema
}

#horarios = {
	id_horario: int - pk
	hora_ini: string //se cambiara el tipo despues cuando se sepa como guardar solo horas y minutos.
	hora_fin: string
	hora_ini_fin: string - unique // concatenar hora_ini y hora_fin para seleccionarlo en aula_cursos_empleados_horarios con combobox
}

aula_cursos_empleado_horario = {
	id_aceh: int - pk
	id_aula: int - pk - fk
	id_curso: int - pk - fk //De esta forma se conocera que cursos recibe un aula durante el año escolar.
	id_empleado: int - fk //  implicitamente el catedratico de curso de dicha aula
	id_horario: int - fk // varios cursos pueden impartirse a la misma hora, por eso no se coloca unique
}

alumno_aceh = {
	id_alumno_aceh: int pk
	id_alumno: int fk
	id_aceh: int fk //a traves de esta fk se accede a los cursos que el alumno puede asignarse, puesto que el mismo pertenece a un aula y dicha aula en especifico cuenta con cursos en especifico
}

notas_aceh = {
	id_notas_aceh: int pk
	id_alumno_aceh: int fk //con esto se puede traer los datos del alumno, el aula, los cursos, el catedratico que imparte cada curso y el horario.
	nota_p1: int default 0
	nota_p2: int default 0
	nota_p3: int default 0
	nota_p4: int default 0
	promedio: int //suma de cada una de las partes y division por las unidades.
}

responsable_alumno = {
		id_persona: int - pk - fk //Quien responde por un alumno
		id_alumno: int - pk - fk //para saber a que alumno respalda esta persona y obtener sus notas, respectivamente. 
		id_rol: int - fk //el rol es solamente para indicar explicitamente su rol como @encargado o @padre/madre de familia
		checkn1: boolean
		checkn2: 
		checkn3: boolean
		checkn4: boolean
}